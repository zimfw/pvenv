# vim:et sts=2 sw=2 ft=zsh
local -r pusage="Usage: %B${0}%b [%B-n%b|%B--name%b <venv_name>] <command> [arg...]

  %B-n%b|%B--name%b <venv_name>  Set a custom venv name. Default: unique name based on the name of the
                         current directory.

Commands:
  %Buse%b [python] [arg...]  Create venv using the provided python executable (if venv doesn't exist)
                         and activate it. If no python executable is provided, defaults to
                         %Bpython3%b. Any additional arguments given are passed to the venv creation
                         script. See %Bpython3 -m venv --help%b
  %Bls%b                     List path of venv, if venv exists.
  %Brm%b                     Remove venv."

if (( # < 1 )); then
  print -u2 -PR ${pusage}
  return 2
fi

if (( ! ${+PVENV_HOME} )) typeset -g PVENV_HOME=${HOME}/.venvs

if [[ ${1} == (-n|--name) ]]; then
  if (( # < 2 )); then
    print -u2 -PRl "%F{red}${0}: Missing argument for option ${1}%f" '' ${pusage}
    return 2
  fi
  shift
  local -r pvenv_name=${${1%%/##}##/##}
  shift
else
  local -r pvenv_name=$(python3 -c 'import base64
import hashlib
import os
import re
d=os.getcwd()
n=re.sub(r"[ &$`!*@\"\\\r\n\t]", "_", os.path.basename(d)[:42])
h=base64.urlsafe_b64encode(hashlib.sha1(d.encode()).digest()).decode()[:8]
print("{}-{}".format(n, h))')
fi

local -r pvenv_dir=${PVENV_HOME}/${pvenv_name}

case ${1} in
  use)
    if [[ -e ${pvenv_dir} ]]; then
      print -R "Activating venv under ${pvenv_dir}"
      source ${pvenv_dir}/bin/activate
    else
      shift
      local ppython pfile
      if (( # )); then
        ppython=${1}
        shift
      else
        ppython=python3
      fi
      print -PR "%BCreating venv under ${pvenv_dir}${@:+ }${@} using ${ppython} and activating it%b"
      ${ppython} -m venv venv ${pvenv_dir} "${@}" && source ${pvenv_dir}/bin/activate && \
          print -P '%BUpgrading pip%b' && python -m pip install --upgrade pip && \
          for pfile in (*requirements*.txt|setup.py)(N-.); do
            print -P "%BInstalling from ${pfile}%b"
            if [[ ${pfile} == setup.py ]]; then
              python -m pip install -e . || return 1
            else
              python -m pip install -r ${pfile} || return 1
            fi
          done
    fi
    ;;
  ls)
    if [[ -e ${pvenv_dir} ]] print -R ${pvenv_dir}
    ;;
  rm)
    if [[ -e ${pvenv_dir} ]]; then
      print -R "Removing venv under ${pvenv_dir}"
      command rm -rf ${pvenv_dir}
    else
      print -u2 -PR "%F{red}${0}: ${pvenv_dir} not found%f"
      return 1
    fi
    ;;
  *)
    print -u2 -PRl "%F{red}${0}: Unknown command ${1}%f" '' ${pusage}
    return 2
    ;;
esac
